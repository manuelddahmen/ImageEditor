/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"
//apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 31
    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        applicationId "one.empty3.feature.app"
        minSdkVersion 31
        targetSdkVersion 31
        versionCode 1
        versionName "1.0.0"
        vectorDrawables.useSupportLibrary=false
    }
    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }
    compileOptions {
        sourceCompatibility rootProject.ext.java_version
        targetCompatibility rootProject.ext.java_version
    }

    kotlinOptions {
        jvmTarget = rootProject.ext.java_version
    }

    buildTypes {
       release {
           minifyEnabled false
           proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
       }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/daemon-common.kotlin_module")
        exclude("META-INF/metadata.jvm.kotlin_module")
        exclude("kotlin/coroutines/coroutines.kotlin_builtins")
        exclude("META-INF/util.runtime.kotlin_module")
        exclude("kotlin/kotlin.kotlin_builtins")
        exclude("META-INF/kotlinx-coroutines-core.kotlin_module")
        exclude("kotlin/reflect/reflect.kotlin_builtins")
        exclude 'META-INF/metadata.kotlin_module'
        exclude 'META-INF/descriptors.kotlin_module'
        exclude'kotlin/collections/collections.kotlin_builtins'
        exclude'migrateToAndroidx/migration.xml'
        exclude'kotlin/annotation/annotation.kotlin_builtins'
        exclude'META-INF/*.kotlin_module'
        exclude'kotlin/*.kotlin_builtins'
        exclude'kotlin/ranges/ranges.kotlin_builtins'
        exclude'kotlin/internal/internal.kotlin_builtins'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {
    // New version
    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"
    // Kotlin lang
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    // Android support libraries
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.4.0'

    def nav_version = '2.3.5'
    implementation("androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version")
    // Java language implementation
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui:$nav_version")

    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$nav_version")

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:$nav_version")

    // Jetpack Compose Integration
    //implementation("androidx.navigation:navigation-compose:2.4.0-beta02")



    def camerax_version = '1.1.0-alpha10'
    implementation "androidx.camera:camera-core:$camerax_version"

    // CameraX Camera2 extensions
    implementation "androidx.camera:camera-camera2:$camerax_version"

    // CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"

    // CameraX View class
    implementation 'androidx.camera:camera-view:1.0.0-alpha30'

    // CameraX Extensions library
    // implementation 'androidx.camera:camera-extensions:1.0.0-alpha27'

// https://mvnrepository.com/artifact/com.google.guava/guava
    implementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'

    implementation "com.google.android.material:material:1.5.0-beta01"
    ext.supportLibraryVersion = '27.1.1'


// 1: Design Support Library
    implementation "com.android.support:design:$supportLibraryVersion"
// 2: CardView
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    //WindowManager
    implementation 'androidx.window:window:1.0.0-beta03'

    // For Java-friendly APIs to register and unregister callbacks
    implementation "androidx.window:window-java:1.0.0-beta03"

    // For RxJava2 integration
    implementation "androidx.window:window-rxjava2:1.0.0-beta03"

    // For RxJava3 integration
    implementation "androidx.window:window-rxjava3:1.0.0-beta03"

    // For testing
    implementation "androidx.window:window-testing:1.0.0-beta03"
    // Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    // Unit testing
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'androidx.test:rules:1.4.0'
    testImplementation 'androidx.test:runner:1.4.0'
    testImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation 'org.robolectric:robolectric:4.7'

    // Instrumented testing
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test:core:1.4.0"
    androidTestImplementation "androidx.test:rules:1.4.0"
    androidTestImplementation "androidx.test:runner:1.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
}

configurations.all {
    resolutionStrategy {
        // fail eagerly on version conflict (includes transitive dependencies)
        // e.g. multiple different versions of the same dependency (group and name are equal)
        failOnVersionConflict()

        // prefer modules that are part of this build (multi-project or composite build) over external modules
        preferProjectModules()

        // force certain versions of dependencies (including transitive)
        //  *append new forced modules:
        force 'asm:asm-all:3.3.1', 'commons-io:commons-io:1.4'
        //  *replace existing forced modules with new ones:
        forcedModules = ['asm:asm-all:3.3.1']

        // add dependency substitution rules
        dependencySubstitution {
            //substitute module('org.gradle:api') using project(':api')
            //substitute project(':util') using module('org.gradle:util:3.0')
        }

        // cache dynamic versions for 10 minutes
        cacheDynamicVersionsFor 10*60, 'seconds'
        // don't cache changing modules at all
        cacheChangingModulesFor 0, 'seconds'
    }
}